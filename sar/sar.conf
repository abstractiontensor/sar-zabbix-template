# Usage: sar.num[n,DEV,eth1,3] = sar -n DEV for eth1, 3rd column except of the first 2 insignificant.
# Columns start from 1, as well as gnu\cut.
#UserParameter=sar.num[*],LC_TIME='POSIX' sar -$1 $2 | tail -n +4 | egrep '^.*'$3' ' | tail -n 2 | head -n 1 | sed -re 's/'$3' (.*)/\1/g' | tr -s '  ' ' ' | cut -f2- -d' ' | cut -f$4 -d' ' | tr ',' '.'

# Usage: sar.num[n,DEV,eth1,txpck/s] = sadf -- -n DEV for eth1 device, counter txpck/s.
# Replaces ugly sar.num[*].
UserParameter=sar.counter[*],sadf -- -$1 $2 | grep -Pe $3'\t' | grep -Pe $4'\t' | tail -n 1 | cut -f6 |  tr ',' '.'

# Getting sar counters, discarding headers, obtaining second column and wrapping into JSON for zabbix discovery format
UserParameter=sar.discovery[*],sadf -- -$1 $2 | grep -Pe '\d$' | cut -f4 | sort | uniq | sed -re 's/(.*?)/{"{#COUNTER}": "\1"}/g' | tr '\n' ', ' | sed 's/.$//g' | sed -re 's/(^.+)/{"data":[\1]}/g'

# Old version
#UserParameter=sar.discovery[*],LC_TIME='POSIX' sar -$1 $2 | tail -n +4 | grep -Pe '\d$' | tr -s '  ' ' ' | cut -f2 -d' ' | sort | uniq | sed -re 's/(.*?)/{"{#COUNTER}": "\1"}/g' | tr '\n' ', ' | sed 's/.$//g' | sed -re 's/(^.+)/{"data":[\1]}/g'
